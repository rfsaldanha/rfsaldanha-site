{
  "hash": "a4ff3e67b14122c265a8512bb55dcd14",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advances in climate features engineering and subsets modeling\"\nsubtitle: \"for Dengue forecasting\"\nauthor: \"Raphael Saldanha\"\ninstitute: \"HPDaSc Workshop on Data Driven Science - Inria\"\ndate: \"2024-05-31\"\ndescription: \"Talk at the HPDaSc Workshop on Data Driven Science.\"\ncategories: [brclim]\nimage: images/prec_map_1.png\nformat:\n  revealjs: \n    theme: inria_style.scss\n    logo: inria_logo.png\n    transition: fade\n    background-transition: fade\n    pointer:\n      pointerSize: 40\n      color: '#e63312'\ncode-link: true\nrevealjs-plugins:\n  - pointer\n---\n\n\n\n## Context of Climate-Sensitive diseases\n\n-   **Direct** relationship: floods, droughts, heat waves...\n\n-   **Indirect** relationship\n\n\n\n```{mermaid}\n%%{\n  init: {\n    'theme': 'base',\n    'themeVariables': {\n      'fontSize': '30px'\n    }\n  }\n}%%\nflowchart LR\n\nclimate(Climate) --> vector(Disease vectors) --> health(Human health)\nclimate --> health\nclimate --> social(Social & economic \\n determinants) --> health\n```\n\n\n\n## A time-lagged relationship\n\n::: columns\n::: {.column width=\"45%\"}\n-   Vector life cycle from a time perspective\n-   Climate conditions from the **past** leads to the disease incidence of **tomorrow**\n:::\n\n::: {.column width=\"55%\"}\n![](images/aedes_cycle.png){fig-align=\"center\"}\n:::\n:::\n\n## ERA5-Land reanalysis\n\n::: columns\n::: {.column width=\"40%\"}\n-   Copernicus, ECMWF\n-   Global coverage\n-   Hourly data\n-   1950 to the present (one week delay)\n-   Spatial resolution \\~9km\n-   Several climate indicators\n:::\n\n::: {.column width=\"60%\"}\n![](images/NL161-Sabater-Fig1.jpg){fig-align=\"center\"}\n:::\n:::\n\n## Challenge on data structures\n\n-   Climate indicators: grid data\n-   Disease incidence: tabular, individual cases aggregated by spatial regions and time spans\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/temp.png){width=\"80%\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/admin.png){width=\"80%\"}\n:::\n:::\n\n## Zonal statistics\n\n![](images/zonal_statistics.png)\n\n## Resulting products {.small}\n\n::: columns\n::: {.column width=\"50%\"}\n-   ERA5-Land daily datasets\n    -   7,105 files, 658.7 GB\n    -   24,242 downloads on Zenodo\n\n-   Daily zonal statistics of climate indicators\n    -   8 selected indicators, 5,570 municipalities\n    -   6,085,749,761 records covering 1950-2023\n:::\n\n::: {.column width=\"50%\"}\n![](images/era5-land-daily-aggregates.png){fig-align=\"center\"}\n:::\n:::\n\n\n## Precipitation {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/prec_map_2.png){fig-align=\"center\" width=\"100%\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/prec_map_1.png){fig-align=\"center\" width=\"100%\"}\n:::\n:::\n\nRio de Janeiro municipalities. January 1, 2010.\n\n## Angra dos Reis\n\n![](images/angra.webp){fig-align=\"center\" width=\"100%\"}\n\n## Publications & Products {.small}\n\n::: columns\n::: {.column width=\"50%\"}\n-   Paper on [Environmental Data Science journal]{.hl} (Saldanha et al. 2024)\n-   Datasets on Zenodo: more than [34,000 downloads]{.hl}\n-   [brclimr package](https://rfsaldanha.github.io/brclimr/) to retrieve climate data of Brazilian municipalities, Almost 4,000 downloads on CRAN.\n\n![](images/brclimr_downloads.gif){fig-align=\"center\" width=\"40%\"}\n:::\n\n::: {.column width=\"50%\"}\n[![](https://zenodo.org/badge/DOI/10.1017/eds.2024.3.svg)](https://doi.org/10.1017/eds.2024.3) ![](images/eds_paper.png)\n:::\n:::\n\n## brclimr R package {.small}\n\n::: columns\n::: {.column width=\"50%\"}\n-   [Package](https://rfsaldanha.github.io/brclimr/) to retrieve climate data of Brazilian municipalities\n-   Query remote parquet files stored on a S3 system\n-   Avoid huge dataset downloads when user wants only a subset of the data\n-   Available on [CRAN](https://cran.r-project.org/web/packages/brclimr/index.html). Almost 4,000 downloads\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrclimr::fetch_data(\n    code_muni = 3304557,\n    product = \"brdwgd\",\n    indicator = \"rh\",\n    statistics = \"mean\",\n    date_start = as.Date(\"2010-10-15\"),\n    date_end = as.Date(\"2010-10-20\")\n  )\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n![](images/brclimr_downloads.gif){fig-align=\"center\" width=\"100%\"}\n:::\n:::\n\n## Subset models for multivariate time series forecast {.small}\n\n::: columns\n::: {.column width=\"60%\"}\n-   Data may present intrinsic [diversity]{.hl} of samples, affecting model's performance on [different parts of the input]{.hl}\n-   [Global models]{.hl}: use all available time series\n-   [Local models]{.hl}: use only time series pertaining to each sample\n-   [Data subsets models]{.hl}: our proposal\n:::\n\n::: {.column width=\"40%\"}\n-   Paper on **ICDE2024**, Multivariate Time Series Analytics workshop ![](images/icde.png){fig-align=\"center\" width=\"50%\"}\n:::\n:::\n\n## Case example\n\n-   [Dengue]{.hl} disease is transmitted by mosquitoes and is a Public Health concern. Record number cases on 2024 in Brazil, tendency to increase with global warming\n-   A typical forecasting model is targeted to predict number of cases based on [climate indicators]{.hl} (rain and temperature)\n-   A [global model]{.hl} would use data from all municipalities, facing [difficulties]{.hl} related to [distinct]{.hl} temporal and spatial disease [transmission patterns]{.hl}\n\n## \n\n![](images/subset_model_fig_a.png){fig-align=\"center\"}\n\n## \n\n![](images/subset_model_fig_b.png){fig-align=\"center\"}\n\n## \n\n![](images/subset_model_fig_c.png){fig-align=\"center\"}\n\n## \n\n![](images/subset_model_fig_d.png){fig-align=\"center\"}\n\n## Experimental setup\n\n-   [Identify]{.hl} data subsets considering dengue cases and covariates patterns across municipalities with DTW distance.\n    -   Select the [optimum]{.hl} number of subsets ($k$) considering silhouette score\n-   Train random forest [Global Model]{.hl} with and without the [subset id]{.hl} feature information\n-   Train random forest [Subsets Models]{.hl}\n-   [Evaluate]{.hl} forecasting model's [performance]{.hl} on test data\n\n\n## Clustering results\n\n::: columns\n::: {.column width=\"40%\"}\n-   $k = 5$ returned the highest silhouette score\n-   Partition sizes: $g_1 = 69$, $g_2 = 62$, $g_3 = 82$, $g_4 = 102$, $g_5 = 18$\n:::\n\n::: {.column width=\"60%\"}\n![](images/subset_model_partitions_map.png){fig-align=\"center\"}\n:::\n:::\n\n## Model results\n\n![](images/subsets_model_accuracy.png){fig-align=\"center\"}\n\n## Conclusions and next steps\n\n-   Subsets models rendered [better performance]{.hl} than global models on [116 municipalities]{.hl} from 333 (34.83%)\n-   Subsets models overall performance is related to the [partition's size]{.hl}. Bigger partitions (more municipalities) have more training data.\n-   We are working on different clustering strategies (constraints in size and featured-based approaches) and apply different learners on model training\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}