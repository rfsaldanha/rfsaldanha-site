{
  "hash": "2c800f46a20e98d69b17026d26a1da33",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Climate data for Brazilian municipalities\"\n#subtitle: \"\"\nauthor: \"Raphael Saldanha et al.\"\ninstitute: \"Fiocruz\"\ndate: \"2024-11-20\"\n#description: \"\"\ncategories: [climate]\n#image: images/subsets_model_accuracy.png\nformat:\n  revealjs: \n    theme: inria_style.scss\n    # logo: inria_logo.png\n    transition: fade\n    background-transition: fade\n    pointer:\n      pointerSize: 40\n      color: '#e63312'\ncode-link: true\nrevealjs-plugins:\n  - pointer\n---\n\n\n\n## Overview\n\n-   Climate raw data sources: ground level and reanalysis\n-   Data on Braziliam municipalities spatial unit\n-   Climatological normals and indicators\n\n## Ground-level climate data\n\n::::: columns\n::: {.column width=\"55%\"}\n-   Weather stations on Camet√° and Mocajuba (north region)\n-   Data every 5 minutes, sent to Fiocruz Postgres server\n-   `{plugfieldapi}` package to retrieve data from stations with daily e-mail reports\n-   Error detection and notification for problems\n:::\n\n::: {.column width=\"45%\"}\n![](images/estacao_mocajuba.mp4){autoplay=\"true\" loop=\"true\" muted=\"true\"}\n:::\n:::::\n\n## ReAnalysis climate data\n\n::::: columns\n::: {.column width=\"50%\"}\n-   [ERA5-Land]{.hl}: global coverage, hourly and daily data, regular updates\n-   [BR-DWGD]{.hl}: Brazil coverage, daily data, sensible to extreme events, sporadic updates\n-   [TerraClimate]{.hl}: global coverage, monthly data, higher resolution (\\~4km), regular updates\n:::\n\n::: {.column width=\"50%\"}\n![](../data-projects/era5land-daily-latin-america_files/figure-html/unnamed-chunk-1-1.png)\n\nMore details [here](https://rfsaldanha.github.io/data-projects/era5land-daily-latin-america.html)\n:::\n:::::\n\n## Climate data for Brazilian municipalities\n\n-   Zonal statistics computation\n-   Adoption of `{exactextractr}` package for cell's coverage weighted computations\n-   Creation of package `{zonalclim}` with helper functions to compute scalable zonal statistics with chunks strategy\n-   DAG system using the `{targets}` package to compute climate zonal statistics for Brazilian municipalities\n-   Publication on Environmental Data Science journal\n\nMore details [here](https://rfsaldanha.github.io/data-projects/brazil-climate-zonal-indicators.html)\n\n## Example\n\n![](../data-projects/images/zonal_brdwgd-01.png)\n\n## Climatological normals\n\n-   Climatological normals are computed only for weather stations and municipal references are needed for better climate change understanding\n-   Normals computed for each Brazilian municipality using the Zonal BR-DWGD from 1961 to 1990\n    -   Mean, 10th and 90th percentile\n    -   Temperature (max, min), precipitation, relative humidity, solar radiation, wind speed, and evapotranspiration\n\n## \n\n![](../data-projects/brazil_climate_normals_indicators_files/figure-html/unnamed-chunk-31-1.png)\n\n## Time-aggregated indicators\n\n-   Municipal daily data time series to monthly indicators\n-   Monthly statistics\n    -   Average, median, standard deviation, standard error, maximum and minimum values, and percentiles\n-   Occurence of events\n    -   22 indicators, in reference to normals or count sequence. Creation of `{nseq}` package\n    -   Heat waves, cold spells, count of warm days, count of dry and wet days, and others\n\nMore details [here](https://rfsaldanha.github.io/data-projects/brazil_climate_normals_indicators.html).\n\n## \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](climate_br_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Future work\n\n-   Compute zonal statistics weighted by populated areas\n-   Create other time-aggregated indicators\n-   Test the methodologies on other countries",
    "supporting": [
      "climate_br_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}