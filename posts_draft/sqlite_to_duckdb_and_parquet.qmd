---
title: "SQLite database conversion to DuckDB and Parquet files"
date: "2023-10-24"
categories: [database, sqlite, duckdb, parquet]
---

[DuckDB](https://duckdb.org) is a relatively new database that works in a file, just like SQLite, but is very fast and designed for data science workflows.

I am writing this post to cover the following scenario: you already have a SQLite database and want to convert it to DuckDB, and also export it to a [parquet](https://parquet.apache.org) file.

## SQLite database

We need a SQLite database example to later convert it to DuckDB. Let's use the `mtcars` dataset.

```{r}
#| message: false
library(dplyr)
library(lubridate)

glimpse(mtcars)
```

And write `mtcars` in a SQLite database.

```{r}
sqlite_database_file <- tempfile()

conn_sqlite <- DBI::dbConnect(
  RSQLite::SQLite(), 
  sqlite_database_file, 
  extended_types = TRUE
)

DBI::dbWriteTable(conn_sqlite, name = "mtcars_table", value = mtcars, overwrite = TRUE)
```

Let's take a look.

```{r}
tbl(conn_sqlite, "mtcars_table") %>% head() %>% collect()
```

::: callout-note
Note that this database could be written directly using DuckDB, but this is an example about database conversion.
:::

## From SQLite to DuckDB

First, we need to create our DuckDB database.

```{r}
duckdb_database_file <- tempfile()

conn_duckdb <- DBI::dbConnect(
  duckdb::duckdb(), 
  duckdb_database_file
)
```

To import our data, we can use a [DuckDB extension to read SQLite databases](https://duckdb.org/docs/guides/import/query_sqlite.html).

```{r}
DBI::dbExecute(conn_duckdb, "INSTALL sqlite;")
DBI::dbExecute(conn_duckdb, "LOAD sqlite;")
```

```{r}
DBI::dbExecute(conn_duckdb, glue::glue("CREATE TABLE mtcars_table AS SELECT * FROM sqlite_scan('{sqlite_database_file}', 'mtcars_table');"))
```

Great! Now we have the same database on DuckDB.

## From DuckDB to Parquet

It is very simple to [export](https://duckdb.org/docs/guides/import/parquet_export) a DuckDB table to a parquet file.

```{r}
parquet_file <- tempfile()

DBI::dbExecute(conn_duckdb, glue::glue("COPY (SELECT * FROM 'mtcars_table') TO '{parquet_file}' (FORMAT 'PARQUET')"))
```

And that's it! Let's close the connections.

```{r}
DBI::dbDisconnect(conn_sqlite)
DBI::dbDisconnect(conn_duckdb, shutdown = TRUE)
```
