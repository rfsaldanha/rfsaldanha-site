---
title: "Climatological normals and indicators of Brazilian municipalities"
bibliography: references.bib
---

## Introduction

Climatological normals are averages of climate variables observed for a given time -- usually months -- in a 30-year range. The normals are usually used as comparison benchmarks against recent or current conditions, being useful to recognize anomalies and to characterize global warming impacts.

These normals are usually computed to surface meteorological stations maintained by government meteorological institutions (QUOTE INMET). In Brazil, the distribution of surface meteorological stations over the territory is scarce and uneven. Thus, the availability of climatological normals to different regions and administrative divisions like municipalities is difficult. 

I propose here a method to compute climatological normals and other climate indicator to the Brazilian municipalities using a climate reanalysis dataset. 

## Methods

Climatological normals can be computed from other sources of observation, including remote sensing sensors and "area averages or points in gridded datasets" [@wmoWMOGuidelinesCalculation2017]. Some gridded climatological datasets are available for the Brazilian territory, including the ERA5-Land from Copernicus [@muñoz-sabater2021] and the BR-DWGD dataset [@xavier2022], offering hourly and daily data (respectively) of several climatological indicators for a long time range, being continuously updated. 

However, some research methods demands that climate data must be aggregated in the same spatial and temporal units of other data to be used in statistical models. This procedure is fairly common in epidemiological and economical studies. In order to approach this issue, spatial gridded data can be aggregated using zonal statistics [@saldanhaZonalStatisticsDatasets2024].

I used the same methodology from the study above to create zonal statistics of climate indicators with data from the BR-DWGD project [@xavier2022]. This data is available [here](https://rfsaldanha.github.io/data-projects/brazil-climate-zonal-indicators.html#zonal-br-dwgd), presenting climatological indicators of interest from 1961 to March 2024 for all Brazilian municipalities. Thus, I propose here to compute the climatological normals and other climate indicators from this dataset.

In order to compute climatological normals and other indicators, I created an R package named [climindi](https://rfsaldanha.github.io/climindi). The package provides helper functions to compute climatological normals and other aggregated indicators in a [tidy](https://www.tidyverse.org) way.

### Data source

We will use the climate indicators from [here](https://rfsaldanha.github.io/data-projects/brazil-climate-zonal-indicators.html#zonal-br-dwgd) and use the the [{zendown}](https://rfsaldanha.github.io/zendown/) package to download the data files from Zenodo. 

### Packages

```{r}
#| message: false
#| warning: false
library(dplyr)
library(lubridate)
library(arrow)
library(readr)
library(climindi) # http://rfsaldanha.github.io/climindi/
library(zendown) # https://rfsaldanha.github.io/zendown/
```

::: callout-warning
For these computations, I needed to increase the envinroment variable `R_MAX_VSIZE`, as explained [here](https://stackoverflow.com/questions/51248293/error-vector-memory-exhausted-limit-reached-r-3-5-0-macos).
:::

### Precipitation (mm)

#### Data
```{r}
#| message: false
#| warning: false
pr_data <- zen_file(13906834, "pr_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "pr_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
pr_normal <- pr_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
pr_indi <- pr_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_precipitation(
        value_var = value, 
        normals_df = pr_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = pr_normal, sink = "pr_normal.parquet")
write_csv2(x = pr_normal, file = "pr_normal.csv")
write_parquet(x = pr_indi, sink = "pr_indi.parquet")
write_csv2(x = pr_indi, file = "pr_indi.csv")
```

```{r}
rm(list = ls())
```

### Evapotranspiration (mm)

#### Data

```{r}
eto_data <- zen_file(13906834, "ETo_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "ETo_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
eto_normal <- eto_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
eto_indi <- eto_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_evapotrapiration(
        value_var = value, 
        normals_df = eto_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = eto_normal, sink = "eto_normal.parquet")
write_csv2(x = eto_normal, file = "eto_normal.csv")
write_parquet(x = eto_indi, sink = "eto_indi.parquet")
write_csv2(x = eto_indi, file = "eto_indi.csv")
```

```{r}
rm(list = ls())
```

### Maximum temperature (°C)

#### Data

```{r}
tmax_data <- zen_file(13906834, "Tmax_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "Tmax_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
tmax_normal <- tmax_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
tmax_indi <- tmax_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_temp_max(
        value_var = value, 
        normals_df = tmax_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = tmax_normal, sink = "tmax_normal.parquet")
write_csv2(x = tmax_normal, file = "tmax_normal.csv")
write_parquet(x = tmax_indi, sink = "tmax_indi.parquet")
write_csv2(x = tmax_indi, file = "tmax_indi.csv")
```

```{r}
rm(list = ls())
```

### Minimum temperature (°C)

#### Data

```{r}
tmin_data <- zen_file(13906834, "Tmin_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "Tmin_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
tmin_normal <- tmin_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
tmin_indi <- tmin_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_temp_min(
        value_var = value, 
        normals_df = tmin_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = tmin_normal, sink = "tmin_normal.parquet")
write_csv2(x = tmin_normal, file = "tmin_normal.csv")
write_parquet(x = tmin_indi, sink = "tmin_indi.parquet")
write_csv2(x = tmin_indi, file = "tmin_indi.csv")
```

```{r}
rm(list = ls())
```

### Solar radiation (MJm-2)

#### Data

```{r}
rs_data <- zen_file(13906834, "Rs_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "Rs_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
rs_normal <- rs_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
rs_indi <- rs_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_solar_radiation(
        value_var = value, 
        normals_df = rs_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = rs_normal, sink = "rs_normal.parquet")
write_csv2(x = rs_normal, file = "rs_normal.csv")
write_parquet(x = rs_indi, sink = "rs_indi.parquet")
write_csv2(x = rs_indi, file = "rs_indi.csv")
```

```{r}
rm(list = ls())
```

### Wind speed at 2m height (m/s)

#### Data

```{r}
u2_data <- zen_file(13906834, "u2_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "u2_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
u2_normal <- u2_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
u2_indi <- u2_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_windspeed(
        value_var = value, 
        normals_df = u2_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = u2_normal, sink = "u2_normal.parquet")
write_csv2(x = u2_normal, file = "u2_normal.csv")
write_parquet(x = u2_indi, sink = "u2_indi.parquet")
write_csv2(x = u2_indi, file = "u2_indi.csv")
```

```{r}
rm(list = ls())
```

### Relative humidity (%)

#### Data

```{r}
rh_data <- zen_file(13906834, "RH_3.2.3.parquet") |>
    open_dataset() |>
    filter(name == "RH_3.2.3_mean") |>
    filter(date >= as.Date("1961-01-01")) |>
    filter(date <= as.Date("2023-12-31")) |>
    select(-name) |>
    collect()
```

#### Normal
```{r}
#| message: false
#| warning: false
rh_normal <- rh_data |>
    # Identify month
    mutate(month = month(date)) |>
    # Group by id variable and month
    group_by(code_muni, month) |>
    # Compute normal
    summarise_normal(
        date_var = date, value_var = value, 
        year_start = 1961, year_end = 1990
    ) |>
    # Ungroup
    ungroup()
```

#### Indicators

```{r}
#| message: false
#| warning: false
rh_indi <- rh_data |>
    # Identify year
    mutate(year = year(date)) |>
    # Identify month
    mutate(month = month(date)) |>
    # Filter year
    filter(year >= 1991) |>
    # Group by id variable, year and month
    group_by(code_muni, year, month) |>
    # Compute precipitation indicators
    summarise_rel_humidity(
        value_var = value, 
        normals_df = rh_normal
    ) |>
    # Ungroup
    ungroup()
```

#### Export

```{r}
#| message: false
#| warning: false
write_parquet(x = rh_normal, sink = "rh_normal.parquet")
write_csv2(x = rh_normal, file = "rh_normal.csv")
write_parquet(x = rh_indi, sink = "rh_indi.parquet")
write_csv2(x = rh_indi, file = "rh_indi.csv")
```

```{r}
rm(list = ls())
```















text[^1] and present 5,565 features.

[^1]: footnote example


::: callout-note
Example
:::


citation example [@osrm_paper_2022]


```{r}
#| message: false
#| warning: false
library(dplyr)

```



## Dataset download

The dataset with the road distances and trip duration are available on Zenodo, on RDS format, parquet format, and CSV (zipped) format.

Click the link below to access and download the data.

[![](https://zenodo.org/badge/DOI/10.5281/zenodo.11400243.svg)](https://doi.org/10.5281/zenodo.11400243)

You can also download the dataset directly from R, using the [{zendown}](https://rfsaldanha.github.io/zendown/) package.

```{r}
#| message: false
#| warning: false
# install.packages("zendown")
library(zendown)

dist_brasil_file <- zen_file(11400243, "dist_brasil.rds")

dist_brasil <- readRDS(dist_brasil_file)

head(dist_brasil)
```



## Future plans

-   Compute routes using other available routing services.

-   Yearly updates of the dataset, as the road infrastructure may change.


## Session info

```{r}
sessioninfo::session_info()
```